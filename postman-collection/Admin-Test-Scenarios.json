{
	"info": {
		"_postman_id": "admin-test-scenarios",
		"name": "Admin Test Scenarios",
		"description": "Pre-configured test scenarios for Admin operations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Admin Setup",
			"item": [
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('accessToken', response.data.accessToken);",
									"    pm.environment.set('refreshToken', response.data.refreshToken);",
									"    pm.environment.set('userId', response.data.user.id);",
									"    pm.environment.set('userRole', response.data.user.role);",
									"    console.log('Admin logged in successfully');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{adminEmail}}\",\n  \"password\": \"{{adminPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					}
				}
			]
		},
		{
			"name": "Complete User Management Flow",
			"item": [
				{
					"name": "1. Create Test User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('targetUserId', response.data.user.id);",
									"    console.log('Test user created with ID:', response.data.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"testuser@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"Test User for Admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					}
				},
				{
					"name": "2. View All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users"]
						}
					}
				},
				{
					"name": "3. Update User Role to MODERATOR",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"MODERATOR\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{targetUserId}}/role",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "{{targetUserId}}", "role"]
						}
					}
				},
				{
					"name": "4. Deactivate User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{targetUserId}}/status",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "{{targetUserId}}", "status"]
						}
					}
				},
				{
					"name": "5. View System Audit Logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/audit/system?limit=20",
							"host": ["{{baseUrl}}"],
							"path": ["api", "audit", "system"],
							"query": [
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					}
				},
				{
					"name": "6. Delete Test User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{targetUserId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "{{targetUserId}}"]
						}
					}
				}
			]
		}
	]
}