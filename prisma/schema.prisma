generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  password     String
  name         String?
  isActive     Boolean  @default(true)
  isVerified   Boolean  @default(false)
  role         Role     @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  refreshTokens RefreshToken[]
  passwordResets PasswordReset[]
  auditLogs AuditLog[]

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

model PasswordReset {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  
  user User @relation(fields: [email], references: [email], onDelete: Cascade)

  @@map("password_resets")
}

model AuditLog {
  id          String   @id @default(cuid())
  userId      String?
  userEmail   String?
  action      String
  resource    String?
  resourceId  String?
  details     Json?
  ipAddress   String?
  userAgent   String?
  success     Boolean  @default(true)
  createdAt   DateTime @default(now())
  
  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@map("audit_logs")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}